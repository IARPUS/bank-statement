{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/roychoi/Desktop/projects/bank-analysis/frontend/app/components/FileSystemDrawer.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport FolderIcon from '@mui/icons-material/Folder';\nexport default function FileSystemDrawer() {\n  const [open, setOpen] = React.useState(false);\n\n  const toggleDrawer = (newOpen: boolean) => () => {\n    setOpen(newOpen);\n  };\n\n  const DrawerList = (\n    <Box sx={{ width: 250 }} role=\"presentation\">\n      <Box>\n        <Button onClick={toggleDrawer(false)}><FolderIcon></FolderIcon></Button>\n      </Box>\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text,) => (\n          <ListItem key={text} disablePadding>\n            <ListItemButton>\n              <ListItemText primary={text} />\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n\n      <Divider />\n\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text,) => (\n          <ListItem key={text} disablePadding>\n            <ListItemButton>\n              <ListItemIcon>\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n\n  return (\n    <div>\n      <Button onClick={toggleDrawer(true)}><FolderIcon></FolderIcon></Button>\n      <Drawer open={open}>\n        {DrawerList}\n      </Drawer>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AAOA;AANA;AAEA;AACA;AAEA;AAJA;AAGA;AANA;;;AAHA;;;;;;;;;;;;AAYe,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,8JAAM,QAAQ,CAAC;IAEvC,MAAM,eAAe,CAAC,UAAqB;YACzC,QAAQ;QACV;IAEA,MAAM,2BACJ,6LAAC,kJAAA,CAAA,UAAG;QAAC,IAAI;YAAE,OAAO;QAAI;QAAG,MAAK;;0BAC5B,6LAAC,kJAAA,CAAA,UAAG;0BACF,cAAA,6LAAC,wJAAA,CAAA,UAAM;oBAAC,SAAS,aAAa;8BAAQ,cAAA,6LAAC,8JAAA,CAAA,UAAU;;;;;;;;;;;;;;;0BAEnD,6LAAC,oJAAA,CAAA,UAAI;0BACF;oBAAC;oBAAS;oBAAW;oBAAc;iBAAS,CAAC,GAAG,CAAC,CAAC,qBACjD,6LAAC,4JAAA,CAAA,UAAQ;wBAAY,cAAc;kCACjC,cAAA,6LAAC,wKAAA,CAAA,UAAc;sCACb,cAAA,6LAAC,oKAAA,CAAA,UAAY;gCAAC,SAAS;;;;;;;;;;;uBAFZ;;;;;;;;;;0BAQnB,6LAAC,0JAAA,CAAA,UAAO;;;;;0BAER,6LAAC,oJAAA,CAAA,UAAI;0BACF;oBAAC;oBAAY;oBAAS;iBAAO,CAAC,GAAG,CAAC,CAAC,qBAClC,6LAAC,4JAAA,CAAA,UAAQ;wBAAY,cAAc;kCACjC,cAAA,6LAAC,wKAAA,CAAA,UAAc;;8CACb,6LAAC,oKAAA,CAAA,UAAY;;;;;8CAEb,6LAAC,oKAAA,CAAA,UAAY;oCAAC,SAAS;;;;;;;;;;;;uBAJZ;;;;;;;;;;;;;;;;IAYvB,qBACE,6LAAC;;0BACC,6LAAC,wJAAA,CAAA,UAAM;gBAAC,SAAS,aAAa;0BAAO,cAAA,6LAAC,8JAAA,CAAA,UAAU;;;;;;;;;;0BAChD,6LAAC,wJAAA,CAAA,UAAM;gBAAC,MAAM;0BACX;;;;;;;;;;;;AAIT;GA9CwB;KAAA"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}