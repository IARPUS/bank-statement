{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/roychoi/Desktop/projects/bank-analysis/frontend/app/main/dashboard/analysis/suggestions/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Grid,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n} from '@mui/material';\nimport { analyzeOpenAI } from '@/app/utils/files';\nimport { useBankStatement } from '../../layout';\n\ninterface FinancialData {\n  [title: string]: {\n    [bullet: string]: string;\n  };\n}\n\nconst FinancialAnalysisPage: React.FC = () => {\n  const [financialData, setFinancialData] = useState<FinancialData | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const { bankStatementText } = useBankStatement();\n\n  useEffect(() => {\n    if (!bankStatementText) {\n      setError('No bank statement text available.');\n      setLoading(false);\n      return;\n    }\n\n    const processBankStatement = async () => {\n      try {\n        const processedData: FinancialData = await analyzeOpenAI(bankStatementText);\n        setFinancialData(processedData);\n      } catch (err: any) {\n        console.error('Error processing bank statement:', err);\n        setError('Failed to process bank statement.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    processBankStatement();\n  }, [bankStatementText]);\n\n  if (loading) {\n    return <Typography variant=\"h6\">Loading financial data...</Typography>;\n  }\n\n  if (error) {\n    return (\n      <Box>\n        <Typography variant=\"h6\" color=\"error\">\n          Error: {error}\n        </Typography>\n      </Box>\n    );\n  }\n\n  if (!financialData) {\n    return (\n      <Typography variant=\"h6\">No financial data available.</Typography>\n    );\n  }\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Analysis Overview\n      </Typography>\n\n      <Grid container spacing={3}>\n        {Object.entries(financialData).map(([title, bullets]) => (\n          <Grid item xs={12} md={6} key={title}>\n            <Paper sx={{ p: 3, height: '100%' }}>\n              <Typography variant=\"h5\" gutterBottom>\n                {title}\n              </Typography>\n              <Divider sx={{ mb: 2 }} />\n              <List>\n                {Object.entries(bullets).map(([bulletTitle, bulletText]) => (\n                  <ListItem key={bulletTitle} disablePadding>\n                    <ListItemText\n                      primary={bulletTitle}\n                      secondary={bulletText}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default FinancialAnalysisPage;\n"],"names":[],"mappings":";;;;AAEA;AAWA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAHA;;;;;AAsBA,MAAM,wBAAkC;;IACtC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAwB;IACzE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,EAAE,iBAAiB,EAAE,GAAG,CAAA,GAAA,sIAAA,CAAA,mBAAgB,AAAD;IAE7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;2CAAE;YACR,IAAI,CAAC,mBAAmB;gBACtB,SAAS;gBACT,WAAW;gBACX;YACF;YAEA,MAAM;wEAAuB;oBAC3B,IAAI;wBACF,MAAM,gBAA+B,MAAM,CAAA,GAAA,yHAAA,CAAA,gBAAa,AAAD,EAAE;wBACzD,iBAAiB;oBACnB,EAAE,OAAO,KAAU;wBACjB,QAAQ,KAAK,CAAC,oCAAoC;wBAClD,SAAS;oBACX,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;QACF;0CAAG;QAAC;KAAkB;IAEtB,IAAI,SAAS;QACX,qBAAO,6LAAC,yMAAA,CAAA,aAAU;YAAC,SAAQ;sBAAK;;;;;;IAClC;IAEA,IAAI,OAAO;QACT,qBACE,6LAAC,oLAAA,CAAA,MAAG;sBACF,cAAA,6LAAC,yMAAA,CAAA,aAAU;gBAAC,SAAQ;gBAAK,OAAM;;oBAAQ;oBAC7B;;;;;;;;;;;;IAIhB;IAEA,IAAI,CAAC,eAAe;QAClB,qBACE,6LAAC,yMAAA,CAAA,aAAU;YAAC,SAAQ;sBAAK;;;;;;IAE7B;IAEA,qBACE,6LAAC,oLAAA,CAAA,MAAG;QAAC,IAAI;YAAE,GAAG;QAAE;;0BACd,6LAAC,yMAAA,CAAA,aAAU;gBAAC,SAAQ;gBAAK,YAAY;0BAAC;;;;;;0BAItC,6LAAC,uLAAA,CAAA,OAAI;gBAAC,SAAS;gBAAC,SAAS;0BACtB,OAAO,OAAO,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,OAAO,QAAQ,iBAClD,6LAAC,uLAAA,CAAA,OAAI;wBAAC,IAAI;wBAAC,IAAI;wBAAI,IAAI;kCACrB,cAAA,6LAAC,0LAAA,CAAA,QAAK;4BAAC,IAAI;gCAAE,GAAG;gCAAG,QAAQ;4BAAO;;8CAChC,6LAAC,yMAAA,CAAA,aAAU;oCAAC,SAAQ;oCAAK,YAAY;8CAClC;;;;;;8CAEH,6LAAC,gMAAA,CAAA,UAAO;oCAAC,IAAI;wCAAE,IAAI;oCAAE;;;;;;8CACrB,6LAAC,uLAAA,CAAA,OAAI;8CACF,OAAO,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,aAAa,WAAW,iBACrD,6LAAC,mMAAA,CAAA,WAAQ;4CAAmB,cAAc;sDACxC,cAAA,6LAAC,+MAAA,CAAA,eAAY;gDACX,SAAS;gDACT,WAAW;;;;;;2CAHA;;;;;;;;;;;;;;;;uBARQ;;;;;;;;;;;;;;;;AAsBzC;GA9EM;;QAI0B,sIAAA,CAAA,mBAAgB;;;KAJ1C;uCAgFS"}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}