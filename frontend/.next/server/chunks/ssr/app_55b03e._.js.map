{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/roychoi/Desktop/projects/bank-analysis/frontend/app/utils/files.tsx"],"sourcesContent":["export async function uploadFile(bucketName: string, filePath: string, file) {\n  try {\n    // Create a FormData object\n    const formData = new FormData();\n    formData.append(\"bucketName\", bucketName);\n    formData.append(\"filePath\", filePath);\n    formData.append(\"file\", file);\n\n    // Send a POST request to the Next.js API route\n    const response = await fetch(\"/api/files/upload\", {\n      method: \"POST\",\n      body: formData,\n    });\n\n    if (!response.ok) {\n      const error = await response.text();\n      throw new Error(`Failed to upload file: ${error}`);\n    }\n\n    const data = await response.json();\n    console.log(data.message);\n    alert(\"File uploaded successfully!\");\n  } catch (error) {\n    console.error(\"Error uploading file:\", error);\n    alert(\"Error uploading file: \" + error.message);\n  }\n}\nexport async function fetchBankStatementData(bucketName: string, filePath: string) {\n  try {\n    const response = await fetch(\"/api/textract\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ bucketName, filePath }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || \"Failed to fetch Textract data\");\n    }\n\n    const data = await response.json();\n    console.log(\"Extracted data:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching Textract data:\", error);\n    alert(\"Error fetching bank statement data: \" + error.message);\n  }\n}\nexport async function getMetaData(bucketName: string, filePath: string) {\n  try {\n    const response = await fetch(\"/api/files/retrieve-metadata\", {\n      method: \"POST\", // Ensure this is POST\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        bucketName: bucketName,\n        directory: filePath,\n      }),\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || \"Failed to fetch Textract data\");\n    }\n\n    const data = await response.json();\n    return data.data;\n  } catch (error) {\n    console.error(\"Error retrieving file data:\", error);\n    alert(\"Error retrieving file data: \" + error.message);\n  }\n};"],"names":[],"mappings":";;;;;AAAO,eAAe,WAAW,UAAkB,EAAE,QAAgB,EAAE,IAAI;IACzE,IAAI;QACF,2BAA2B;QAC3B,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,cAAc;QAC9B,SAAS,MAAM,CAAC,YAAY;QAC5B,SAAS,MAAM,CAAC,QAAQ;QAExB,+CAA+C;QAC/C,MAAM,WAAW,MAAM,MAAM,qBAAqB;YAChD,QAAQ;YACR,MAAM;QACR;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;YACjC,MAAM,IAAI,MAAM,CAAC,uBAAuB,EAAE,OAAO;QACnD;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC,KAAK,OAAO;QACxB,MAAM;IACR,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM,2BAA2B,MAAM,OAAO;IAChD;AACF;AACO,eAAe,uBAAuB,UAAkB,EAAE,QAAgB;IAC/E,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,iBAAiB;YAC5C,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAY;YAAS;QAC9C;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;YACjC,MAAM,IAAI,MAAM,MAAM,OAAO,IAAI;QACnC;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC,mBAAmB;QAC/B,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,MAAM,yCAAyC,MAAM,OAAO;IAC9D;AACF;AACO,eAAe,YAAY,UAAkB,EAAE,QAAgB;IACpE,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,gCAAgC;YAC3D,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBACnB,YAAY;gBACZ,WAAW;YACb;QACF;QACA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;YACjC,MAAM,IAAI,MAAM,MAAM,OAAO,IAAI;QACnC;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,KAAK,IAAI;IAClB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM,iCAAiC,MAAM,OAAO;IACtD;AACF"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///Users/roychoi/Desktop/projects/bank-analysis/frontend/app/components/FileSystem/FileSystemTree.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';\nimport { TreeItem } from '@mui/x-tree-view/TreeItem';\nimport { getMetaData } from '@/app/utils/files';\n\ninterface S3Object {\n  key: string;\n  size: number;\n  lastModified: string;\n}\n\ninterface ListDirectoryResponse {\n  directory: string;\n  folders: string[];\n  files: S3Object[];\n}\n\ninterface TreeViewBaseItem {\n  id: string;\n  label: string;\n  children?: TreeViewBaseItem[];\n  hasChildren?: boolean;\n}\n\n/**\n * Maps S3 API response to TreeItems.\n */\nfunction mapS3ResponseToTreeItems(response: ListDirectoryResponse): TreeViewBaseItem[] {\n  const items: TreeViewBaseItem[] = [];\n\n  // Map folders\n  if (Array.isArray(response.folders)) {\n    response.folders.forEach((folder) => {\n      const folderName = folder.replace(/\\/$/, ''); // Remove trailing '/'\n      items.push({\n        id: folder,\n        label: folderName,\n        hasChildren: true,\n        children: [], // Initially empty\n      });\n    });\n  }\n\n  // Map files\n  if (Array.isArray(response.files)) {\n    response.files.forEach((file) => {\n      const fileName = file.key.split('/').pop() || file.key; // Extract file name\n      items.push({\n        id: file.key,\n        label: fileName,\n        hasChildren: false,\n      });\n    });\n  }\n\n  return items;\n}\n\n/**\n * Recursively renders TreeItems.\n */\nfunction renderTree(node: TreeViewBaseItem, handleNodeClick: (nodeId: string) => void, handleRightClick: (nodeId: string) => void, handleCloseContextMenu: () => void): React.ReactNode {\n  return (\n    <Box>\n      <TreeItem\n        key={node.id}\n        itemId={node.id}\n        label={node.label}\n        onClick={() => handleNodeClick(node.id)} // Attach click handler\n        onContextMenu={(event) => handleRightClick(event, node.hasChildren ? 'folder' : 'file', node)}\n      >\n        {node.children?.map((child) => renderTree(child, handleNodeClick, handleRightClick, handleCloseContextMenu))}\n      </TreeItem>\n    </Box>\n  );\n}\n\n/**\n * Main FileSystemTree Component\n */\nexport default function FileSystemTree() {\n  const [treeItems, setTreeItems] = React.useState<TreeViewBaseItem[]>([]);\n  const [loading, setLoading] = React.useState<boolean>(true);\n  const [error, setError] = React.useState<string | null>(null);\n  const [contextMenu, setContextMenu] = useState<{\n    mouseX: number;\n    mouseY: number;\n    targetType: 'file' | 'folder' | 'empty';\n    targetId?: string;\n  } | null>(null);\n  // Fetch initial data\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getMetaData('iarpus-bankstatement', 'user1/');\n        const mappedItems = mapS3ResponseToTreeItems(data);\n        setTreeItems(mappedItems);\n      } catch (err: any) {\n        console.error('Error fetching metadata:', err);\n        setError('Failed to load initial directory.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n  // Handle node clicks\n  const handleNodeClick = async (nodeId: string) => {\n    const node = treeItems.find((item) => item.id === nodeId);\n    if (node && node.hasChildren && node.children?.length === 0) {\n      try {\n        const data = await getMetaData('iarpus-bankstatement', `${nodeId}/`);\n        const newChildren = mapS3ResponseToTreeItems(data);\n        setTreeItems((prevItems) =>\n          prevItems.map((item) =>\n            item.id === nodeId ? { ...item, children: newChildren } : item\n          )\n        );\n      } catch (err: any) {\n        console.error('Error fetching subdirectory:', err);\n        setError(`Failed to load contents for ${nodeId}.`);\n      }\n    }\n  };\n  const handleRightClick = (\n    event: React.MouseEvent,\n    type: 'file' | 'folder' | 'empty',\n    node?: TreeViewBaseItem\n  ) => {\n    event.preventDefault();\n    setContextMenu({\n      mouseX: event.clientX,\n      mouseY: event.clientY,\n      targetType: type,\n      targetId: node?.id,\n    });\n  };\n  const handleCloseContextMenu = () => {\n    setContextMenu(null);\n  };\n  if (loading) return <div>Loading file system...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <Box sx={{ minHeight: 352, minWidth: 250 }}>\n      <SimpleTreeView>\n        {treeItems.map((node) => renderTree(node, handleNodeClick, handleRightClick, handleCloseContextMenu))}\n      </SimpleTreeView>\n    </Box>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///Users/roychoi/Desktop/projects/bank-analysis/frontend/app/components/FileSystem/FileSystemDrawer.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport FileSystemTree from './FileSystemTree';\nimport FolderIcon from '@mui/icons-material/Folder';\nexport default function FileSystemDrawer() {\n  const [open, setOpen] = React.useState(false);\n\n  const toggleDrawer = (newOpen: boolean) => () => {\n    setOpen(newOpen);\n  };\n\n  const DrawerList = (\n    <Box sx={{ width: 250 }} role=\"presentation\">\n      <Box>\n        <Button onClick={toggleDrawer(false)}><FolderIcon></FolderIcon></Button>\n        <FileSystemTree></FileSystemTree>\n      </Box>\n    </Box>\n  );\n\n  return (\n    <div>\n      <Button onClick={toggleDrawer(true)}><FolderIcon></FolderIcon></Button>\n      <Drawer open={open}>\n        {DrawerList}\n      </Drawer>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AACA;AAIA;AAHA;AAEA;AAEA;AAHA;AAHA;;;;;;;;AAOe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,sMAAM,QAAQ,CAAC;IAEvC,MAAM,eAAe,CAAC,UAAqB;YACzC,QAAQ;QACV;IAEA,MAAM,2BACJ,8OAAC,+IAAA,CAAA,UAAG;QAAC,IAAI;YAAE,OAAO;QAAI;QAAG,MAAK;kBAC5B,cAAA,8OAAC,+IAAA,CAAA,UAAG;;8BACF,8OAAC,qJAAA,CAAA,UAAM;oBAAC,SAAS,aAAa;8BAAQ,cAAA,8OAAC,2JAAA,CAAA,UAAU;;;;;;;;;;8BACjD,8OAAC,kJAAA,CAAA,UAAc;;;;;;;;;;;;;;;;IAKrB,qBACE,8OAAC;;0BACC,8OAAC,qJAAA,CAAA,UAAM;gBAAC,SAAS,aAAa;0BAAO,cAAA,8OAAC,2JAAA,CAAA,UAAU;;;;;;;;;;0BAChD,8OAAC,qJAAA,CAAA,UAAM;gBAAC,MAAM;0BACX;;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":["file:///Users/roychoi/Desktop/projects/bank-analysis/frontend/app/components/NavBar.tsx"],"sourcesContent":["'use client'; // Only needed if you're using Next.js 13+ App Router in a server component folder\n\nimport React from 'react';\nimport Link from 'next/link'; // If using Next.js\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\nexport default function NavBar() {\n  return (\n    <AppBar position=\"static\" /* or \"fixed\" if you want it to stay on top while scrolling */>\n      <Toolbar>\n        {/* Logo / App Title */}\n        <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n          My App\n        </Typography>\n\n        {/* Nav Links */}\n        <Button color=\"inherit\" component={Link} href=\"/\">\n          Home\n        </Button>\n        <Button color=\"inherit\" component={Link} href=\"/dashboard\">\n          Dashboard\n        </Button>\n        <Button color=\"inherit\" component={Link} href=\"/help\">\n          Help\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA,2QAA8B,mBAAmB;AACjD;AACA;AACA;AACA;AAPA,cAAc,kFAAkF;;;;;;;AASjF,SAAS;IACtB,qBACE,8OAAC,qJAAA,CAAA,UAAM;QAAC,UAAS,SAAS,4DAA4D;kBACpF,cAAA,8OAAC,uJAAA,CAAA,UAAO;;8BAEN,8OAAC,6JAAA,CAAA,UAAU;oBAAC,SAAQ;oBAAK,IAAI;wBAAE,UAAU;oBAAE;8BAAG;;;;;;8BAK9C,8OAAC,qJAAA,CAAA,UAAM;oBAAC,OAAM;oBAAU,WAAW,4JAAA,CAAA,UAAI;oBAAE,MAAK;8BAAI;;;;;;8BAGlD,8OAAC,qJAAA,CAAA,UAAM;oBAAC,OAAM;oBAAU,WAAW,4JAAA,CAAA,UAAI;oBAAE,MAAK;8BAAa;;;;;;8BAG3D,8OAAC,qJAAA,CAAA,UAAM;oBAAC,OAAM;oBAAU,WAAW,4JAAA,CAAA,UAAI;oBAAE,MAAK;8BAAQ;;;;;;;;;;;;;;;;;AAM9D"}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}